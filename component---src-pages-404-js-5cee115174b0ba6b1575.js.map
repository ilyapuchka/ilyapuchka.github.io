{"version":3,"file":"component---src-pages-404-js-5cee115174b0ba6b1575.js","mappings":"uJA8BA,IA3BeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EAD6B,MAChBH,EAASI,SACtBC,EACFC,EAAAA,cAAA,MAAIC,UAAU,gBACZD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAKR,IAIpB,OACEK,EAAAA,cAAA,OAAKC,UAAU,iBAAiB,oBAAmBJ,GACjDG,EAAAA,cAAA,UAAQC,UAAU,iBAAiBF,GACnCC,EAAAA,cAAA,YAAOJ,GACPI,EAAAA,cAAA,cACEA,EAAAA,cAAA,KAAGI,MAAO,CAAEC,UAAU,QAAWC,IAAK,UAAWC,KAAM,+CAA+CP,EAAAA,cAAA,OAAKQ,IAAK,2BAA4BC,IAAK,sDACjJT,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,iCAC6BA,EAAAA,cAAA,KAAGM,IAAK,UAAWC,KAAM,+CAA+C,0DAA0D,KAC9J,MACD,IAAIG,MAAOC,cAAc,eAC5B,IACAX,EAAAA,cAAA,KAAGO,KAAK,4BAA2B,WAEjC,C,+CCuBV,IAvCYd,IAAuC,IAADmB,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEpB,EAAK,SAAEC,GAAUH,EAC3C,MAAM,KAAEuB,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBjB,MAExC,OACEK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQoB,EAAkBzB,EAAK,MAAMyB,EAAiBzB,GACtDK,EAAAA,cAAA,QAAMqB,KAAK,cAAcC,QAASJ,IAClClB,EAAAA,cAAA,QAAMuB,SAAS,WAAWD,QAAS3B,IACnCK,EAAAA,cAAA,QAAMuB,SAAS,iBAAiBD,QAASJ,IACzClB,EAAAA,cAAA,QAAMuB,SAAS,UAAUD,QAAQ,YACjCtB,EAAAA,cAAA,QAAMqB,KAAK,eAAeC,QAAQ,YAClCtB,EAAAA,cAAA,QACEqB,KAAK,kBACLC,SAA0B,QAAjBT,EAAAG,EAAKG,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBW,cAAM,IAAAV,OAAR,EAAjBA,EAA2BW,UAAO,KAE7CzB,EAAAA,cAAA,QAAMqB,KAAK,gBAAgBC,QAAS3B,IACpCK,EAAAA,cAAA,QAAMqB,KAAK,sBAAsBC,QAASJ,IACzCtB,EACA,C,kGCvCP,MAWa8B,EAAOA,IAAM1B,EAAAA,cAAC2B,EAAAA,EAAG,CAAChC,MAAM,mBAErC,UAbqBF,IAAyB,IAAxB,KAAEmC,EAAI,SAAElC,GAAUD,EACtC,MAAMoC,EAAYD,EAAKZ,KAAKG,aAAaxB,MAEzC,OACEK,EAAAA,cAAC8B,EAAAA,EAAM,CAACpC,SAAUA,EAAUC,MAAOkC,GACjC7B,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  const header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        <a style={{ boxShadow: `none` }} rel={\"license\"} href={\"http://creativecommons.org/licenses/by/4.0/\"}><img alt={\"Creative Commons Licence\"} src={\"https://i.creativecommons.org/l/by/4.0/88x31.png\"} /></a>\n        <br/>\n        <p>\n          This work is licensed under a <a rel={\"license\"} href={\"http://creativecommons.org/licenses/by/4.0/\"}>Creative Commons Attribution 4.0 International License</a>.\n        </p>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","className","Link","to","style","boxShadow","rel","href","alt","src","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","Seo","data","siteTitle","Layout"],"sourceRoot":""}